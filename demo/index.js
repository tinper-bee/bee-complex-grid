
import { Con, Row, Col } from 'bee-layout';
import { Panel } from 'bee-panel';
import Button from 'bee-button';
import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import Grid from '../src';


const CARET = <i className="uf uf-arrow-down"></i>;

const CARETUP = <i className="uf uf-arrow-up"></i>;


var Demo1 = require("./demolist/Demo1");var Demo2 = require("./demolist/Demo2");var Demo3 = require("./demolist/Demo3");var Demo4 = require("./demolist/Demo4");var DemoArray = [{"example":<Demo1 />,"title":" 高级表格的基础应用grid","code":"/**\r\n * @title 高级表格的基础应用grid\r\n * @description 全选、分页、过滤功能、交换\r\n *\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Grid } from 'tinper-bee';\r\n\r\nfunction fmoney(s, n) {\r\n  n = n > 0 && n <= 20 ? n : 2;\r\n  s = parseFloat((s + \"\").replace(/[^\\d\\.-]/g, \"\")).toFixed(n) + \"\";\r\n  let l = s.split(\".\")[0].split(\"\").reverse(), r = s.split(\".\")[1];\r\n  let t = \"\";\r\n  for (let i = 0; i < l.length; i++) {\r\n  t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? \",\" : \"\");\r\n  }\r\n  return t.split(\"\").reverse().join(\"\") + \".\" + r;\r\n  }\r\n  \r\nconst column = [\r\n  {\r\n    title: \"序号\",\r\n    dataIndex: \"index\",\r\n    key: \"index\",\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"订单编号\",\r\n    dataIndex: \"orderCode\",\r\n    key: \"orderCode\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"金额\",\r\n    dataIndex: \"money\",\r\n    key: \"money\",\r\n    width: 160,\r\n    textAlign:'right',\r\n    render(text, record, index) {\r\n       let money = fmoney(text,2);\r\n       return (<span>{money}</span>)\r\n    }\r\n  },\r\n  {\r\n    title: \"类型\",\r\n    dataIndex: \"type_name\",\r\n    key: \"type_name\",\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"采购组织\",\r\n    dataIndex: \"purchasing\",\r\n    key: \"purchasing\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"采购组\",\r\n    dataIndex: \"purchasingGroup\",\r\n    key: \"purchasingGroup\",\r\n    width: 300\r\n  },\r\n  {\r\n    title: \"凭证日期\",\r\n    dataIndex: \"voucherDate\",\r\n    key: \"voucherDate\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"审批状态\",\r\n    dataIndex: \"approvalState_name\",\r\n    key: \"approvalState_name\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"确认状态\",\r\n    dataIndex: \"confirmState_name\",\r\n    key: \"confirmState_name\",\r\n    width: 500\r\n  },\r\n  {\r\n    title: \"关闭状态\",\r\n    dataIndex: \"closeState_name\",\r\n    key: \"closeState_name\",\r\n    width: 150\r\n  },\r\n  {\r\n    title: \"操作\",\r\n    dataIndex: \"d\",\r\n    key: \"d\",\r\n    width: 100,\r\n    fixed: \"right\",\r\n    render(text, record, index) {\r\n      return (\r\n        <div className=\"operation-btn\">\r\n          <a\r\n            href=\"#\"\r\n            tooltip={text}\r\n            onClick={() => {\r\n              alert(\"这是第\" + index + \"列，内容为:\" + text);\r\n            }}\r\n          >\r\n            一些操作\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n];\r\nconst dataList = [\r\n  {\r\n    index: 1,\r\n    orderCode: \"2343\",\r\n    supplierName: \"xxx\",\r\n    type_name: \"123\",\r\n    purchasing: \"内行\",\r\n    purchasingGroup: \"323\",\r\n    voucherDate: \"kkkk\",\r\n    approvalState_name: \"vvvv\",\r\n    confirmState_name: \"aaaa\",\r\n    closeState_name: \"vnnnnn\",\r\n    money:'1232.56',\r\n    d: \"操作\",\r\n    key: \"1\"\r\n  },\r\n  {\r\n    index: 2,\r\n    _checked: true,\r\n    orderCode: \"222\",\r\n    supplierName: \"22xxx\",\r\n    type_name: \"1223\",\r\n    purchasing: \"内行2\",\r\n    purchasingGroup: \"3223\",\r\n    voucherDate: \"222kk\",\r\n    approvalState_name: \"22vvvv\",\r\n    confirmState_name: \"2aaaa\",\r\n    closeState_name: \"2vnnnnn\",\r\n    money:'2341232.56',\r\n    d: \"2操作\",\r\n    key: \"2\"\r\n  },\r\n  {\r\n    index: 3,\r\n    orderCode: \"222\",\r\n    supplierName: \"22xxx\",\r\n    _disabled: true,\r\n    type_name: \"1223\",\r\n    purchasing: \"内行2\",\r\n    purchasingGroup: \"3223\",\r\n    voucherDate: \"222kk\",\r\n    approvalState_name: \"22vvvv\",\r\n    confirmState_name: \"2aaaa\",\r\n    closeState_name: \"2vnnnnn\",\r\n    money:'122368732.56',\r\n    d: \"3操作\",\r\n    key: \"3\"\r\n  },\r\n  {\r\n    index: 4,\r\n    orderCode: \"222\",\r\n    supplierName: \"22xxx\",\r\n    type_name: \"1223\",\r\n    purchasing: \"内行2\",\r\n    purchasingGroup: \"3223\",\r\n    voucherDate: \"222kk\",\r\n    approvalState_name: \"22vvvv\",\r\n    confirmState_name: \"2aaaa\",\r\n    closeState_name: \"2vnnnnn\",\r\n    money:'18765232.56',\r\n    d: \"4操作\",\r\n    key: \"4\"\r\n  }\r\n];\r\n\r\nclass Demo1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  //临时加个判断\r\n  shouldComponentUpdate(){\r\n    if(this.props.className =='u-panel-title'){\r\n      return false;\r\n    }\r\n  }\r\n  getSelectedDataFunc = data => {\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  selectedRow = (record, index) => {};\r\n  /**\r\n   * 请求页面数据\r\n   */\r\n  freshata=()=>{\r\n\r\n  }\r\n  onDataNumSelect=()=>{\r\n    console.log('选择每页多少条的回调函数');\r\n  }\r\n  render() {\r\n    let paginationObj = {\r\n      items:10,//一页显示多少条\r\n      total:100,//总共多少条、\r\n      freshData:this.freshData,//点击下一页刷新的数据\r\n      onDataNumSelect:this.onDataNumSelect, //每页大小改变触发的事件\r\n      showJump:false\r\n    }\r\n    return (\r\n      <Grid\r\n        className=\"demo\"\r\n        columns={column}\r\n        data={dataList}\r\n        getSelectedDataFunc={this.getSelectedDataFunc}\r\n        paginationObj={paginationObj}\r\n      />\r\n    );\r\n  }\r\n}\r\n","desc":" 全选、分页、过滤功能、交换"},{"example":<Demo2 />,"title":" 高级表格(排序)应用","code":"/**\r\n *\r\n * @title 高级表格(排序)应用\r\n * @description 基础grid上添加排序功能\r\n *\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Grid } from 'tinper-bee';\r\nconst column = [\r\n    {\r\n      title: \"名字\",\r\n      dataIndex: \"a\",\r\n      key: \"a\",\r\n      className:'dfasd',\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"功力指数\",\r\n      dataIndex: \"b\",\r\n      key: \"b\",\r\n      width: 200,\r\n      sumCol: true,\r\n      sorter: (a, b) => a.c - b.c,\r\n      sorterClick:(data,type)=>{//排序的回调函数\r\n        //type value is up or down\r\n        console.log(\"data\",data);\r\n      }\r\n    },\r\n    {\r\n      title: \"年龄\",\r\n      dataIndex: \"c\",\r\n      key: \"c\",\r\n      width: 200,\r\n      sumCol: true,\r\n      sorter: (a, b) => a.c - b.c,\r\n      sorterClick:(data,type)=>{//排序的回调函数\r\n        //type value is up or down\r\n        console.log(\"data\",data);\r\n      }\r\n    },\r\n    {\r\n      title: \"成绩\",\r\n      dataIndex: \"e\",\r\n      key: \"e\",\r\n      width: 200,\r\n      sumCol: true,\r\n      sorter: (a, b) => a.c - b.c,\r\n    },\r\n    {\r\n      title: \"武功级别\",\r\n      dataIndex: \"d\",\r\n      key: \"d\",\r\n      width: 200\r\n    }\r\n  ];\r\n  const dataList = [\r\n    { a: \"杨过\", b: 675, c: 30, d: \"内行\",e:100, key: \"2\" },\r\n    { a: \"令狐冲\", b: 43, c: 41, d: \"大侠\",e:90, key: \"1\" },\r\n    { a: \"令狐冲1\", b: 43, c: 81, d: \"大侠\", e:120,key: \"4\" },\r\n    { a: \"令狐冲2\", b: 43, c: 81, d: \"大侠\", e:130,key: \"5\" },\r\n    { a: \"郭靖\", b: 153, c: 25, d: \"大侠\",e:90, key: \"3\" }\r\n  ];\r\n\r\nclass Demo2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  //临时加个判断\r\n  shouldComponentUpdate(){\r\n    if(this.props.className =='u-panel-title'){\r\n      return false;\r\n    }\r\n  }\r\n  getSelectedDataFunc = data => {\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  getCloumnsScroll = columns => {\r\n    let sum = 0;\r\n    columns.forEach(da => {\r\n      sum += da.width;\r\n    });\r\n    console.log(\"sum\", sum);\r\n    return sum;\r\n  };\r\n\r\n  selectedRow = (record, index) => {};\r\n  /**\r\n   * 请求页面数据\r\n   */\r\n  freshData=()=>{\r\n\r\n  }\r\n  /**\r\n   * 后端获取数据\r\n   */\r\n  sortFun = (sortParam)=>{\r\n    console.info(sortParam);\r\n    //将参数传递给后端排序\r\n  }\r\n  render() {\r\n    let paginationObj = {\r\n      items:10,//总页数\r\n      freshData:this.freshData\r\n    }\r\n    let sortObj = {\r\n        mode:'multiple',\r\n        // backSource:true,\r\n        sortFun:this.sortFun\r\n      }\r\n    return (\r\n      <Grid\r\n        className=\"demo\"\r\n        columns={column}\r\n        data={dataList}\r\n        getSelectedDataFunc={this.getSelectedDataFunc}\r\n        selectedRow={this.selectedRow}\r\n        sort={sortObj}\r\n        headerScroll={true}\r\n        sortFun={this.sortFun}\r\n        paginationObj={paginationObj}\r\n      />\r\n    );\r\n  }\r\n}\r\n","desc":" 基础grid上添加排序功能"},{"example":<Demo3 />,"title":" 高级表格(保存操作模板、导出excel)应用 ","code":"/**\r\n  * @title 高级表格(保存操作模板、导出excel)应用 \r\n * @description 拖住表格宽度、交换列、以及导出excel功能\r\n *\r\n */\r\nimport React, { Component } from \"react\";\r\n\nimport { Grid, Button } from 'tinper-bee';\r\n\r\nconst column = [\r\n  {\r\n    title: \"序号\",\r\n    dataIndex: \"index\",\r\n    key: \"index\",\r\n    width: 100,\r\n    // exportHidden:true //是否在导出中隐藏此列,此属性如不设置的话，他会读取当前页面的列是否隐藏和显示\r\n  },\r\n  {\r\n    title: \"订单编号\",\r\n    dataIndex: \"orderCode\",\r\n    key: \"orderCode\",\r\n    exportKey:'supplierName',//单独设置当前列的导出的key\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"供应商名称\",\r\n    dataIndex: \"supplierName\",\r\n    key: \"supplierName\",\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"类型\",\r\n    dataIndex: \"type_name\",\r\n    key: \"type_name\",\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"采购组织\",\r\n    dataIndex: \"purchasing\",\r\n    key: \"purchasing\",\r\n    width: 100,\r\n  },\r\n  {\r\n    title: \"采购组\",\r\n    dataIndex: \"purchasingGroup\",\r\n    key: \"purchasingGroup\",\r\n    width: 300\r\n  },\r\n  {\r\n    title: \"凭证日期\",\r\n    dataIndex: \"voucherDate\",\r\n    key: \"voucherDate\",\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"审批状态\",\r\n    dataIndex: \"approvalState_name\",\r\n    key: \"approvalState_name\",\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"确认状态\",\r\n    dataIndex: \"confirmState_name\",\r\n    key: \"confirmState_name\",\r\n    width: 500\r\n  },\r\n  {\r\n    title: \"关闭状态\",\r\n    dataIndex: \"closeState_name\",\r\n    key: \"closeState_name\",\r\n    width: 100\r\n  },\r\n  {\r\n    title: \"操作\",\r\n    dataIndex: \"d\",\r\n    key: \"d\",\r\n    width: 100,\r\n    fixed: \"right\",\r\n    render(text, record, index) {\r\n      return (\r\n        <div className=\"operation-btn\">\r\n          <a\r\n            href=\"#\"\r\n            tooltip={text}\r\n            onClick={() => {\r\n              alert(\"这是第\" + index + \"列，内容为:\" + text);\r\n            }}\r\n          >\r\n            一些操作\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n];\r\nconst dataList = [\r\n  {\r\n    index: 1,\r\n    orderCode: \"2343\",\r\n    supplierName: \"xxx\",\r\n    type_name: \"123\",\r\n    purchasing: \"内行\",\r\n    purchasingGroup: \"323\",\r\n    voucherDate: \"kkkk\",\r\n    approvalState_name: \"vvvv\",\r\n    confirmState_name: \"aaaa\",\r\n    closeState_name: \"vnnnnn\",\r\n    d: \"操作\",\r\n    key: \"1\"\r\n  },\r\n  {\r\n    index: 2,\r\n    _checked: true,\r\n    orderCode: \"222\",\r\n    supplierName: \"22xxx\",\r\n    type_name: \"1223\",\r\n    purchasing: \"内行2\",\r\n    purchasingGroup: \"3223\",\r\n    voucherDate: \"222kk\",\r\n    approvalState_name: \"22vvvv\",\r\n    confirmState_name: \"2aaaa\",\r\n    closeState_name: \"2vnnnnn\",\r\n    d: \"2操作\",\r\n    key: \"2\"\r\n  },\r\n  {\r\n    index: 3,\r\n    orderCode: \"222\",\r\n    supplierName: \"22xxx\",\r\n    _disabled: true,\r\n    type_name: \"1223\",\r\n    purchasing: \"内行2\",\r\n    purchasingGroup: \"3223\",\r\n    voucherDate: \"222kk\",\r\n    approvalState_name: \"22vvvv\",\r\n    confirmState_name: \"2aaaa\",\r\n    closeState_name: \"2vnnnnn\",\r\n    d: \"3操作\",\r\n    key: \"3\"\r\n  },\r\n  {\r\n    index: 4,\r\n    orderCode: \"222\",\r\n    supplierName: \"22xxx\",\r\n    type_name: \"1223\",\r\n    purchasing: \"内行2\",\r\n    purchasingGroup: \"3223\",\r\n    voucherDate: \"222kk\",\r\n    approvalState_name: \"22vvvv\",\r\n    confirmState_name: \"2aaaa\",\r\n    closeState_name: \"2vnnnnn\",\r\n    d: \"4操作\",\r\n    key: \"4\"\r\n  }\r\n];\r\n\r\nconst exportDataList = [\r\n  {\r\n    index: 1,\r\n    orderCode: \"2343\",\r\n    supplierName: \"xxx\",\r\n    type_name: \"123\",\r\n    purchasing: \"内行\",\r\n    purchasingGroup: \"323\",\r\n    voucherDate: \"kkkk\",\r\n    approvalState_name: \"vvvv\",\r\n    confirmState_name: \"aaaa\",\r\n    closeState_name: \"vnnnnn\",\r\n    d: \"操作\",\r\n    key: \"1\"\r\n  },\r\n  {\r\n    index: 4,\r\n    orderCode: \"222\",\r\n    supplierName: \"22xxx\",\r\n    type_name: \"1223\",\r\n    purchasing: \"内行2\",\r\n    purchasingGroup: \"3223\",\r\n    voucherDate: \"222kk\",\r\n    approvalState_name: \"22vvvv\",\r\n    confirmState_name: \"2aaaa\",\r\n    closeState_name: \"2vnnnnn\",\r\n    d: \"4操作\",\r\n    key: \"4\"\r\n  }\r\n];\r\n\r\n\r\nclass Demo3 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      showTemTable:false\r\n    }\r\n  }\r\n  \r\n  getSelectedDataFunc = data => {\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  getCloumnsScroll = columns => {\r\n    let sum = 0;\r\n    columns.forEach(da => {\r\n      sum += da.width;\r\n    });\r\n    console.log(\"sum\", sum);\r\n    return sum;\r\n  };\r\n\r\n  selectedRow = (record, index) => {};\r\n  /**\r\n   * 请求页面数据\r\n   */\r\n  freshData=()=>{\r\n\r\n  }\r\n  createTemTable=()=>{\r\n    const colsAndTablePros = this.refs.grid.getColumnsAndTablePros();\r\n    this.setState({\r\n      showTemTable:true,\r\n      tablePros:colsAndTablePros.tablePros,\r\n      temColumns:colsAndTablePros.columns\r\n    });\r\n  }\r\n\r\n  exportExcel = ()=>{\r\n    this.refs.grid.exportExcel();\r\n  }\r\n\r\n  render() {\r\n    let paginationObj = {\r\n      items:10,//总页数\r\n      total:100,\r\n      freshData:this.freshData\r\n    }\r\n    return (\r\n      <div>\r\n        <div className='btn_group'>\r\n          <Button colors=\"primary\" onClick={this.createTemTable}>生成模板表格</Button>\r\n          <Button colors=\"primary\" onClick={this.exportExcel}>导出数据</Button>\r\n        </div>\r\n        <Grid\r\n          ref=\"grid\"\r\n          className='gridDemo demo'\r\n          columns={column}\r\n          data={dataList}\r\n          exportData={exportDataList}\r\n          getSelectedDataFunc={this.getSelectedDataFunc}\r\n          checkMinSize={7}\r\n          // draggable={true}\r\n          dragborder\r\n          multiSelect={{ type: \"checkbox\" }}\r\n          scroll={{ x: \"130%\", y: 100 }}\r\n          selectedRow={this.selectedRow}\r\n          paginationObj={paginationObj}\r\n          showFilterPopover={true}\r\n        />\r\n        <h3>根据模板生成的表格</h3>\r\n        {this.state.showTemTable?\r\n          <Grid {...this.state.tablePros} columns={this.state.temColumns}/>\r\n          :\"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","desc":" 拖住表格宽度、交换列、以及导出excel功能"},{"example":<Demo4 />,"title":" 高级表格的基础应用grid","code":"/**\r\n * @title 高级表格的基础应用grid\r\n * @description 全选、分页、过滤功能、交换\r\n *\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Grid } from 'tinper-bee';\r\nconst columns = [\r\n    {\r\n        title:'序号',\r\n        dataIndex:'index',\r\n        width:'80',\r\n        render:(text,record,index)=>{\r\n            return index\r\n        },\r\n        fixed:'left'\r\n    },\r\n    {\r\n    title: \"用户名\", dataIndex: \"a\", key: \"a\", width: 580, className: \"rowClassName\",\r\n  },\r\n  { id: \"123\", title: \"性别\", dataIndex: \"b\", key: \"b\", width: 80},\r\n  { title: \"年龄\", dataIndex: \"c\", key: \"c\", width: 200 },\r\n  {\r\n    title: \"操作\",\r\n    dataIndex: \"d\",\r\n    key: \"d\",\r\n    fixed:'right',\r\n    render(text, record, index) {\r\n      return (\r\n        <div style={{ position: 'relative' }} title={text} >\r\n          <a\r\n            href=\"javascript:;\"\r\n            tooltip={text}\r\n            onClick={() => {\r\n              alert('这是第' + index + '列，内容为:' + text);\r\n            }}\r\n          >\r\n            一些操作\r\n              </a>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n];\r\n\r\nconst data = [ ...new Array(10000) ].map((e, i) => {\r\n    const rs = { a: i + 'a', b: i + 'b', c: i + 'c', d: i + 'd', key: i };\r\n    if(i%3==0){\r\n        rs.b = '女';\r\n    }\r\n    return rs;\r\n   })\r\n\r\nclass Demo4 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  //临时加个判断\r\n  shouldComponentUpdate(){\r\n    if(this.props.className =='u-panel-title'){\r\n      return false;\r\n    }\r\n  }\r\n  getSelectedDataFunc = data => {\r\n    console.log(\"data\", data);\r\n  };\r\n\r\n  selectedRow = (record, index) => {};\r\n  /**\r\n   * 请求页面数据\r\n   */\r\n  freshata=()=>{\r\n\r\n  }\r\n  onDataNumSelect=()=>{\r\n    console.log('选择每页多少条的回调函数');\r\n  }\r\n  render() {\r\n    let paginationObj = {\r\n      items:10,//一页显示多少条\r\n      total:100,//总共多少条\r\n      freshData:this.freshData,//点击下一页刷新的数据\r\n      onDataNumSelect:this.onDataNumSelect //每页大小改变触发的事件\r\n    }\r\n    return (\r\n      <Grid\r\n        className=\"demo\"\r\n        columns={columns}\r\n        data={data}\r\n        getSelectedDataFunc={this.getSelectedDataFunc}\r\n        paginationObj={paginationObj}\r\n        loadLazy={true}\r\n        heigth={40}\r\n        scroll = {{y:300}}\r\n      />\r\n    );\r\n  }\r\n}\r\n","desc":" 全选、分页、过滤功能、交换"}]


class Demo extends Component {
    constructor(props){
        super(props);
        this.state = {
            open: false
        }
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick() {
        this.setState({ open: !this.state.open })
    }

    render () {
        const { title, example, code, desc  } = this.props;
        let caret = this.state.open ? CARETUP : CARET;
        let text = this.state.open ? "隐藏代码" : "查看代码";

        const footer = (
            <Button shape="block" onClick={ this.handleClick }>
                { caret }
                { text }
            </Button>
        );
        return (
            <Col md={12} >
                <h3>{ title }</h3>
                <p>{ desc }</p>
                <Panel collapsible headerContent expanded={ this.state.open } colors='bordered' header={ example } footer={footer} footerStyle = {{padding: 0}}>
                    <pre><code className="hljs javascript">{ code }</code></pre>
                </Panel>
            </Col>
        )
    }
}

class DemoGroup extends Component {
    constructor(props){
        super(props)
    }
    render () {
        return (
                <Row>
                    {DemoArray.map((child,index) => {

                        return (
                            <Demo example= {child.example} title= {child.title} code= {child.code} desc= {child.desc} key= {index}/>
                        )

                    })}
                </Row>
        )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('tinperBeeDemo'));
